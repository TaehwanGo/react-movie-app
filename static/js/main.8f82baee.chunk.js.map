{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","Helmet","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f82baee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require('../assets/noPosterSmall.png')\n          }\n        />\n\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    // ?api_key=10923b261ba94d897ac6b81148314a3f&language=en-US\n    api_key: '10923b261ba94d897ac6b81148314a3f',\n    language: 'en-US',\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term), // UTF-8로 특수문자 같은 것을 인코딩함(공백은 %20같은 것으로)\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying(); // await이 없으면 기다리지 않고 넘어감\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        // axios instance로 가져온 data를 setState\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      // even if it failed, it makes loading false\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from '../../Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  // style component는 prop을 줄 수 있음\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from '../../Components/Loader';\nimport Section from '../../Components/Section';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from '../../Components/Loader';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{' '}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/noPosterSmall.png')\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `,\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props); // super : React.Component의 this.props에 props을 저장\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props; // react-router-dom의 Router component는 match, location, history, staticContext가 포함 됨(withRouter를 사용하지 않아도 됨)\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push('/'); // return을 넣어줘야 DidMount함수가 종료 되면서 홈으로 감\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport Home from '../Routes/Home';\nimport TV from '../Routes/TV';\nimport Header from './Header';\nimport Search from '../Routes/Search';\nimport Detail from '../Routes/Detail';\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}